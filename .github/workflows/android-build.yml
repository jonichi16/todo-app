name: Android Build

on: [pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Send discord in_progress notification
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "username": "Bob",
            "embeds": [
              {
                "type": "rich",
                "title": "Code checking PR #${{ github.event.number }} on ${{ github.event.repository.name }}",
                "description": "#${{ github.event.number }}: ${{ github.event.pull_request.title }}\n\n${{ github.event.repository.name }}: ${{ github.event.pull_request.head.ref }} → ${{ github.event.pull_request.base.ref }}",
                "color": 13408512,
                "author": {
                  "name": "${{ github.event.pull_request.user.login }}",
                  "url": "${{ github.event.pull_request.user.html_url }}",
                  "icon_url": "${{ github.event.pull_request.user.avatar_url }}"
                },
                "url": "${{ github.event.pull_request.html_url }}",
                "fields": [
                  {
                    "name": "Description",
                    "value": "${{ github.event.pull_request.body || '\n' }}",
                    "inline": "false"
                  },
                  {
                    "name": "Status",
                    "value": "IN_PROGRESS",
                    "inline": "true"
                  },
                  {
                    "name": "Author",
                    "value": "${{ github.actor }}",
                    "inline": "true"
                  },
                  {
                    "name": "Files Affected",
                    "value": "${{ github.event.pull_request.changed_files }} files",
                    "inline": "false"
                  }
                ]
              }
            ]
          }' ${{ secrets.WEBHOOK_URL }}

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Android Lint
        run: ./gradlew lint

      - name: Run ktlint
        run: ./gradlew ktlintFormat

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run local tests
        run: ./gradlew test

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run connected tests
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          script: ./gradlew connectedCheck

  result:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v3

      - name: Send discord success notification
        if: ${{ needs.build.result == 'success' }}
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "username": "Bob",
            "embeds": [
              {
                "type": "rich",
                "title": "PR #${{ github.event.number }} on ${{ github.event.repository.name }} passed code check!",
                "description": "#${{ github.event.number }}: ${{ github.event.pull_request.title }}\n\n${{ github.event.repository.name }}: ${{ github.event.pull_request.head.ref }} → ${{ github.event.pull_request.base.ref }}",
                "color": 3381555,
                "author": {
                  "name": "${{ github.event.pull_request.user.login }}",
                  "url": "${{ github.event.pull_request.user.html_url }}",
                  "icon_url": "${{ github.event.pull_request.user.avatar_url }}"
                },
                "url": "${{ github.event.pull_request.html_url }}",
                "fields": [
                  {
                    "name": "Description",
                    "value": "${{ github.event.pull_request.body || '\n' }}",
                    "inline": "false"
                  },
                  {
                    "name": "Status",
                    "value": "SUCCESS",
                    "inline": "true"
                  },
                  {
                    "name": "Author",
                    "value": "${{ github.actor }}",
                    "inline": "true"
                  },
                  {
                    "name": "Files Affected",
                    "value": "${{ github.event.pull_request.changed_files }} files",
                    "inline": "false"
                  }
                ]
              }
            ]
          }' ${{ secrets.WEBHOOK_URL }}
          echo "${{ toJson(needs) }}"

      - name: Send discord failed notification
        if: ${{ needs.build.result == 'failure' }}
        run: |
          curl -H "Content-Type: application/json" -X POST -d '{
            "username": "Bob",
            "embeds": [
              {
                "type": "rich",
                "title": "PR #${{ github.event.number }} on ${{ github.event.repository.name }} hit a snag!",
                "description": "#${{ github.event.number }}: ${{ github.event.pull_request.title }}\n\n${{ github.event.repository.name }}: ${{ github.event.pull_request.head.ref }} → ${{ github.event.pull_request.base.ref }}",
                "color": 13369344,
                "author": {
                  "name": "${{ github.event.pull_request.user.login }}",
                  "url": "${{ github.event.pull_request.user.html_url }}",
                  "icon_url": "${{ github.event.pull_request.user.avatar_url }}"
                },
                "url": "${{ github.event.pull_request.html_url }}",
                "fields": [
                  {
                    "name": "Description",
                    "value": "${{ github.event.pull_request.body || '\n' }}",
                    "inline": "false"
                  },
                  {
                    "name": "Status",
                    "value": "FAILURE",
                    "inline": "true"
                  },
                  {
                    "name": "Author",
                    "value": "${{ github.actor }}",
                    "inline": "true"
                  },
                  {
                    "name": "Files Affected",
                    "value": "${{ github.event.pull_request.changed_files }} files",
                    "inline": "false"
                  }
                ]
              }
            ]
          }' ${{ secrets.WEBHOOK_URL }}
          echo "${{ toJson(needs) }}"